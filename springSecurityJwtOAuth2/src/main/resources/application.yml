spring:
  security:
    oauth2:
      client:
        # OAuth2 서비스에 10개 항목을 등록해야한다.
        #Registration
        #Registration은 외부 서비스에서 우리 서비스를 특정하기 위해 등록하는 정보여서 등록이 필수적
        registration:
          # 서비스명을 입력
          naver:
            # 서비스 명을 특정할 key 값
            client-name: naver
            # 소셜로그인 신청시 발급해주는 값들(아이디/비밀번호)
            client-id: L8siBZjcDHeDZkbq8_Dg
            client-secret: qwjOq9oIA9
            # 로그인 성공시 코드를 발급받을 uri(관습적으로 `/login/oauth2/code/서비스명`을 사용한다)
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            #  4가지 인증 방식 중 한가지를 선택하는 항목.
            authorization-grant-type: authorization_code
            # 리소스 서버에서 가져올 데이터 범위
            scope: name,email
        # provider
        #provider의 경우 서비스별로 정해진 값이 존재하며
        #OAuth2 클라이언트 의존성이 유명한 서비스의 경우 내부적으로 데이터를 가지고 있다.
        #구글, Okta, 페이스북, 깃허브 등등
        # 서비스를 이용할 주소를 넣어주면 된다.
        provider:
          naver:
            # 서비스 로그인 창 주소
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            # 토큰 발급 서버 주소
            token-uri: https://nid.naver.com/oauth2.0/token
            # 사용자 정보 획득 주소
            user-info-uri: https://openapi.naver.com/v1/nid/me
            # 응답 데이터가 어떤 변수(key)에 담겨서 올지 설정
            user-name-attribute: response
            

  jwt:
    secret: vmfhaltmskdlstkfkdgodyroqkfwkdbalroqkfwkdbalaaaaaaaaaaaaaaaabbbbb
    # 대칭키를 지정한다.
    # spring이 값을 가지고있지 않은 임의의 값을 넣으면 된다
  mustache:
    servlet:
      expose-request-attributes: true
  datasource:
    url: jdbc:h2:tcp://localhost/~/springSecurity
    username: aa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
logging.level:
  org.hibernate.SQL: debug

# 세션 타임아웃 설정을 통해 로그인 이후 세션이 유지되고 소멸하는 시간을 설정할 수 있다.
# 세션 소멸 시점은 서버에 마지막 특정 요청을 수행한 뒤 설정한 시간 만큼 유지된다. (기본 시간 1800초)
# Authentication Persistence and Session Management 스프링 공식 문서
server:
  servlet:
    session:
      # 기본은 초단위
      timeout: 1800
      # 분으로도 설정 가능하다.
#      timeout: 30m